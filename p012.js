// Highly divisible triangular number
// Problem 12
// The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

// 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

// Let us list the factors of the first seven triangle numbers:

//  1: 1
//  3: 1,3
//  6: 1,2,3,6
// 10: 1,2,5,10
// 15: 1,3,5,15
// 21: 1,3,7,21
// 28: 1,2,4,7,14,28
// We can see that 28 is the first triangle number to have over five divisors.

// What is the value of the first triangle number to have over five hundred divisors?
const getDivisors = (num) => {
	let numberOfDivisors = 0;
	for (let i = 1; i <= Math.sqrt(num); i++) {
		if (num % i === 0) {
			numberOfDivisors += 2;
		}
	}

	if (Math.sqrt(num) * Math.sqrt(num) === num) {
		numberOfDivisors--;
	}

	return numberOfDivisors;
};

const getHighlyDivisibleTriangleNumber = (numberOfDivisors) => {
	let index = 1;
	let nthTriangleNumber = 0;
	while (getDivisors(nthTriangleNumber) <= numberOfDivisors) {
		nthTriangleNumber += index;
		index++;
	}
	return nthTriangleNumber;
};

console.log(getHighlyDivisibleTriangleNumber(5)); //28
console.log(getHighlyDivisibleTriangleNumber(500)); //76576500
